import React from 'react';
import Head from 'next/head';
import Row from '../../general-styles/Row';
import RowContainer from '../../general-styles/RowContainer';
import { gql } from '@apollo/client';
import client from '../../lib/client';
import ProductCart from '../../components/ProductCart/ProductCart';

// import useDimensions from '../custom-design-hooks/useDimensions';

export default function Products({ products }) {
  // const width = useDimensions('resize');
  // console.log('Inside products page');
  console.log(products);
  return (
    <React.Fragment>
      <Head>
        <title>TWS Framework </title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Row color='sky-900'>
        <RowContainer displayOption='grid-center'>
          <div className='col-span-12'>
            <h1>This is the products page</h1>
          </div>
        </RowContainer>
        <RowContainer>
          <div className=''>
            <ul className='grid grid-cols-fit gap-6'>
              {products.map((product) => (
                <li key={product.id} className='flex flex-col'>
                  {/* {product.name}{' '}
                  <span className='text-sm'>{product.price}</span>
                  <img src={product.featuredImage?.node.sourceUrl} alt='' /> */}
                  <ProductCart product={product} />
                </li>
              ))}
            </ul>
          </div>
        </RowContainer>
      </Row>
    </React.Fragment>
  );
}

export async function getServerSideProps(context) {
  console.log(context.params);
  const { data } = await client.query({
    query: gql`
      query MyQuery {
        products(first: 100) {
          nodes {
            sku
            ... on SimpleProduct {
              name
              id
              price
              featuredImage {
                node {
                  sourceUrl
                }
              }
              onSale
              salePrice
              featured
            }
            productCategories {
              nodes {
                slug
              }
            }
          }
        }
      }
    `,
  });

  const products = data.products.nodes;

  // console.log(products.data.products.nodes);
  return {
    props: {
      products,
    },
  };
}
